{
  "name": "fomobot",
  "version": "0.0.0",
  "author": "highlander <bithighlander@gmail.com>",
  "description": "Your Fomo Bro!",
  "license": null,
  "scripts": {
    "node version": "node --version",
    "npm": "npm i",
    "compile": "lerna run compile",
    "clean": "lerna run clean",
    "lint": "lerna run lint",
    "test": "lerna run test",
    "test-jest": "jest",
    "test-jest-verbose": "jest --verbose",
    "portainer-build": "docker volume create portainer_data",
    "portainer-run": "docker run -d -p 9000:9000 --restart always --name portainer01 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer",
    "docker-compose": "docker-compose up",
    "npm-audit": "./scripts/npm-audit",
    "npm-build-deps-all": "./scripts/npm-build-deps",
    "npm-update-all": "./scripts/update-all",
    "npm-clean-all": "./scripts/npm-clean-all",
    "npm-install-all": "scripts/npm-install-all",
    "build-auth": "./scripts/auth",
    "lerna-bump-version": "lerna publish --no-push --skip-npm --force-publish '*' patch --yes",
    "lerna-bump-version-minor": "lerna publish --no-push --skip-npm --force-publish '*' minor --yes",
    "lerna-bump-version-major": "lerna publish --no-push --skip-npm --force-publish '*' major --yes",
    "lerna-check-packages": "yarn clean && yarn compile && yarn test && yarn lint",
    "publish-all-packages": "./scripts/publish",
    "bootstrap": "lerna bootstrap --use-workspaces",
    "logs-citadel": "kubectl --kubeconfig kubeconfig -n default logs -f deployment/citadel-deployment --all-containers=true --since=10m",
    "logs-pioneer": "kubectl --kubeconfig kubeconfig -n default logs -f deployment/pioneer-deployment --all-containers=true --since=10m --max-log-requests 10",
    "lerna-publish": "lerna publish",
    "kill-pm2": "pm2 kill",
    "start-pm2": "pm2 start process.json --watch && pm2 logs",
    "docker-build": "docker build -t pioneer/pioneer-api .",
    "docker-run": "docker run --env-file=env_docker -i -p 80:80 --rm --name pioneer-api01 pioneer/pioneer-api",
    "issue-ssl": "npx create-ssl-cert --hostname localhost --domain test",
    "bundle-dev": "",
    "deploy-kube-admin": "kubectl --kubeconfig kubeconfig  apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml",
    "get-kube-token": "kubectl --kubeconfig kubeconfig  get secret $(kubectl --kubeconfig kubeconfig  get secret | grep cicd-token | awk '{print $1}') -o jsonpath='{.data.token}' | base64 --decode",
    "get-admin-token": "kubectl --kubeconfig kubeconfig  -n kube-system describe secret $(kubectl --kubeconfig kubeconfig  -n kube-system get secret | grep admin | awk '{print $1}')",
    "proxy-admin": "kubectl --kubeconfig kubeconfig  proxy",
    "open-admin": "firefox -new-tab 'http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login'",
    "open-admin-mac": "open -a firefox -g 'http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login'",
    "list-pods": "kubectl --kubeconfig kubeconfig get pods",
    "list-deployments": "kubectl --kubeconfig kubeconfig  get deploy",
    "list-nodes": "kubectl --kubeconfig kubeconfig  get nodes",
    "list-services": "kubectl --kubeconfig kubeconfig  get services",
    "apply-service": "kubectl --kubeconfig kubeconfig  apply -f ./kube-general/",
    "list-secrets": "kubectl --kubeconfig kubeconfig  get secret",
    "docker-local": "sudo docker run --rm -it -p 8080:80 bithighlander/fomo-api",
    "deploy": "kubectl --kubeconfig kubeconfig  apply -f ./kube/"
  },
  "dependencies": {
    "animated-number-vue": "^1.0.0",
    "vue-css-donut-chart": "^1.1.6"
  },
  "devDependencies": {
    "lerna": "^3.18.3"
  }
}
